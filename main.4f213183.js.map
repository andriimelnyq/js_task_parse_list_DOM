{"version":3,"sources":["scripts/main.js"],"names":["employeesList","document","querySelectorAll","sortList","list","sortedList","sort","employee1","employye2","parseSalary","dataset","salary","replace","querySelector","append","getEmployees","map","employee","name","innerText"],"mappings":";AAAA,aAwBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtBA,IAAMA,EAAgBC,SAASC,iBAAiB,MAEhD,SAASC,EAASC,GAAM,IAAA,EAChBC,EAAa,EAAID,GAAME,KAAK,SAACC,EAAWC,GAC5CC,OAAAA,EAAYD,EAAUE,QAAQC,QAC1BF,EAAYF,EAAUG,QAAQC,UAE3BF,SAAAA,EAAYE,GACZA,OAAAA,EAAOC,QAAQ,UAAW,KAGnCX,EAAAA,SAASY,cAAc,OAAMC,OAAUT,MAAAA,EAAAA,EAAAA,IAGzC,SAASU,EAAaX,GACb,OAAA,EAAIA,GAAMY,IAAI,SAAAC,GAAQ,OAAA,EAAA,CAC3BC,KAAMD,EAASE,WACZF,EAASP,WAIhBP,EAASH,GACTe,EAAaf","file":"main.4f213183.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employeesList = document.querySelectorAll('li');\n\nfunction sortList(list) {\n  const sortedList = [...list].sort((employee1, employye2) =>\n    parseSalary(employye2.dataset.salary)\n      - parseSalary(employee1.dataset.salary));\n\n  function parseSalary(salary) {\n    return salary.replace(/[^+\\d]/g, '');\n  }\n\n  document.querySelector('ul').append(...sortedList);\n}\n\nfunction getEmployees(list) {\n  return [...list].map(employee => ({\n    name: employee.innerText,\n    ...employee.dataset,\n  }));\n}\n\nsortList(employeesList);\ngetEmployees(employeesList);\n"]}